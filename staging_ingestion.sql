--SOLUZIONE PER I DATI DI EHR --OK
CREATE OR REPLACE PIPE STAGING.EHR_PIPE
    AUTO_INGEST = TRUE
    AS
    COPY INTO SNOWFLAKE_LEARNING_DB.STAGING.EHR_LANDING(RAW_JSON)
    FROM @SNOWFLAKE_LEARNING_DB.STAGING.CLINICAL_STAGE/ehr/
    FILE_FORMAT = SNOWFLAKE_LEARNING_DB.STAGING.PATIENT_HEALTH_DATA_JSON
;


--SOLUZIONE PER I DATI DELLA SENSORISTICA IOT --OK
--1. CREAZIONE DI UNA TABELLA D'APPOGGIO
CREATE OR REPLACE TABLE SNOWFLAKE_LEARNING_DB.STAGING.IOT_VITALS_RAW (
    RAW VARIANT
);
--2. CREAZIONE DI UNA PIPE CHE METTE IL JSON NELLA TABELLA D'APPOGGIO
CREATE OR REPLACE PIPE SNOWFLAKE_LEARNING_DB.STAGING.IOT_VITALS_RAW_PIPE
    AUTO_INGEST = TRUE
    AS
    COPY INTO SNOWFLAKE_LEARNING_DB.STAGING.IOT_VITALS_RAW
    FROM @SNOWFLAKE_LEARNING_DB.STAGING.CLINICAL_STAGE/iot_vitals/
    FILE_FORMAT = SNOWFLAKE_LEARNING_DB.STAGING.PATIENT_HEALTH_DATA_JSON
;

--3.CREAZIONE DI UNO STREAM SULLA TABELLA D'APPOGGIO
CREATE OR REPLACE STREAM SNOWFLAKE_LEARNING_DB.STAGING.IOT_VITALS_RAW_STREAM 
ON TABLE SNOWFLAKE_LEARNING_DB.STAGING.IOT_VITALS_RAW
;

--4. CREAZIONE DI UN TASK CHE VIENE ATTIVATO QUANDO NELLO STREAM SONO PRESENTI DATI
-- IL TASK VA A MAPPARE I CAMPI DEL JSON ALL'INTERNO DI UNA TABELLA
CREATE OR REPLACE TASK SNOWFLAKE_LEARNING_DB.STAGING.TRANSFORM_IOT_VITALS
  WAREHOUSE = COMPUTE_WH
  WHEN SYSTEM$STREAM_HAS_DATA('IOT_VITALS_RAW_STREAM')
AS
INSERT INTO SNOWFLAKE_LEARNING_DB.STAGING.PATIENTS_IOT_VITALS (
    PATIENT_CODE,
    TIMESTAMP,
    DEVICE_ID,
    BED_LOCATION,
    HEART_RATE_BPM,
    SPO2_PERCENT,
    TEMPERATURE_CELSIUS,
    BLOOD_PRESSURE_SYS,
    BLOOD_PRESSURE_DIA,
    BATTERY_LEVEL,
    SIGNAL_QUALITY,
    SENSORS_RAW
)
SELECT
    reading.value:patient_code::STRING,
    reading.value:timestamp::TIMESTAMP_TZ,
    reading.value:device_id::STRING,
    reading.value:bed_location::STRING,
    reading.value:frequenza_cardiaca::NUMBER(3,0),
    reading.value:saturazione_o2::NUMBER(3,0),
    reading.value:temperatura::NUMBER(4,1),
    reading.value:pressione_sistolica::NUMBER(3,0),
    reading.value:pressione_diastolica::NUMBER(3,0),
    reading.value:battery_level::NUMBER(3,0),
    reading.value:signal_quality::STRING,
    reading.value
FROM SNOWFLAKE_LEARNING_DB.STAGING.IOT_VITALS_RAW_STREAM r,
     LATERAL FLATTEN(input => r.RAW:"iot_readings") AS reading
;
ALTER TASK STAGING.TRANSFORM_IOT_VITALS RESUME;

--CREAZIONE DI UNA PIPE PER SALVARE I DATI SULLE FATTURE --OK
CREATE OR REPLACE PIPE SNOWFLAKE_LEARNING_DB.STAGING.INVOICE_PIPE
    AUTO_INGEST = TRUE
    AS
    COPY INTO SNOWFLAKE_LEARNING_DB.STAGING.FATTURE_REPARTI (
        INVOICE_ID ,
        DATA_FATTURA,
        REPARTO,
        TIPO_FATTURA,
        PAZIENTE_ID,
        NOME_PAZIENTE,
        DESCRIZIONE_PRESTAZIONE,
        FORNITORE,
        DESCRIZIONE_FORNITURA,
        IMPORTO,
        STATO
    )
    FROM (
        SELECT
            $1::STRING AS INVOICE_ID,
            $2::DATE AS DATA_FATTURA,
            $3::STRING AS REPARTO,
            $4::STRING AS TIPO_FATTURA,
            $5::STRING AS PAZIENTE_ID,
            $6::STRING AS NOME_PAZIENTE,
            $7::STRING AS DESCRIZIONE_PRESTAZIONE,
            $8::STRING AS FORNITORE,
            $9::STRING AS DESCRIZIONE_FORNITURA,
            $10::NUMBER(10,2) AS IMPORTO,
            $11::STRING AS STATO
        FROM @SNOWFLAKE_LEARNING_DB.STAGING.ERP_STAGE/invoices/)
    FILE_FORMAT = SNOWFLAKE_LEARNING_DB.STAGING.FILEFORMAT_CSV
;
--CREAZIONE DELLA PIPE PER PRENDERE DATI GENERICI DEI PAZIENTI
CREATE OR REPLACE PIPE SNOWFLAKE_LEARNING_DB.STAGING.PATIENTS_GENERAL_DATA_PIPE
    AUTO_INGEST = TRUE
    AS
    COPY INTO SNOWFLAKE_LEARNING_DB.STAGING.PATIENTS_GENERAL_DATA (
        ID_PAZIENTE,
        NOME,
        COGNOME,
        DATA_NASCITA,
        SESSO,
        CF,
        DATA_ACCESSO,
        TIPO_ACCESSO,
        DIAGNOSI_PRINCIPALE,
        DIAGNOSI_SECONDARIA,
        REPARTO,
        DATA_DIMISSIONE,
        DATA_DEGENZA_GIORNI,
        COSTO_TOTALE,
        REGIME_RICOVERO,
        ESITI,
        NOTE
    )
    FROM (
        SELECT
            $1::STRING AS ID_PAZIENTE,
            $2::STRING AS NOME,
            $3::STRING AS COGNOME,
            $4::DATE AS DATA_NASCITA,
            $5::STRING AS SESSO,
            $6::STRING AS CF,
            $7::DATE AS DATA_ACCESSO,
            $8::STRING AS TIPO_ACCESSO,
            $9::STRING AS DIAGNOSI_PRINCIPALE,
            $10::STRING AS DIAGNOSI_SECONDARIA,
            $11::STRING AS REPARTO,
            $12::DATE AS DATA_DIMISSIONE,
            $13::NUMBER(3,0) AS DATA_DEGENZA_GIORNI,
            $14::NUMBER(10,2) AS COSTO_TOTALE,
            $15::STRING AS REGIME_RICOVERO,
            $16::STRING AS ESITI,
            $17::STRING AS NOTE
        FROM @SNOWFLAKE_LEARNING_DB.STAGING.ERP_STAGE/patients_data/)
    FILE_FORMAT = SNOWFLAKE_LEARNING_DB.STAGING.FILEFORMAT_CSV
;