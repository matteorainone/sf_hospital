--creazione schema di staging
CREATE SCHEMA IF NOT EXISTS STAGING;

--CREAZIONE DEI FILE FORMAT PER GESTIRE I DATI PROVENIENTI DALLE DIVERSE FONTI

CREATE OR REPLACE FILE FORMAT SNOWFLAKE_LEARNING_DB.STAGING.FILEFORMAT_CSV
    TYPE = CSV
    FIELD_DELIMITER = ','
    SKIP_HEADER = 1
;

CREATE OR REPLACE FILE FORMAT SNOWFLAKE_LEARNING_DB.STAGING.PATIENT_HEALTH_DATA_JSON
    TYPE = JSON
    COMPRESSION = AUTO
    MULTI_LINE = TRUE
    STRIP_OUTER_ARRAY = TRUE
    TIMESTAMP_FORMAT = AUTO
;

--CREAZIONE DELLA STORAGE INTEGRATION (IPOTIZZANDO AWS COME PROVIDER)
CREATE STORAGE INTEGRATION S3_HOSPITAL_INTEGRATION
    TYPE = EXTERNAL_STAGE
    STORAGE_PROVIDER = 'S3'
    ENABLED = TRUE
    STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::122610496520:role/Snowflake_s3_user'
    STORAGE_ALLOWED_LOCATIONS = ('s3://matteo-r-profai-ex-bucket/stage_sf/')
    COMMENT = 'STORAGE INTEGRATION PER BUCKET S3'
;

DESCRIBE INTEGRATION S3_HOSPITAL_INTEGRATION; --per recuperare i valori con cui aggiornare le policy su aws

--CREAZIONE OGGETTO DI STAGING PER DATI ECONOMICI/GESTIONALI
CREATE OR REPLACE STAGE SNOWFLAKE_LEARNING_DB.STAGING.ERP_STAGE
    STORAGE_INTEGRATION = S3_HOSPITAL_INTEGRATION
    URL = 's3://matteo-r-profai-ex-bucket/stage_sf/hospital_economical_data/'
    FILE_FORMAT = SNOWFLAKE_LEARNING_DB.STAGING.FILEFORMAT_CSV
;

--CREAZIONE OGGETTO DI STAGING PER DATI CLINICI
CREATE OR REPLACE STAGE SNOWFLAKE_LEARNING_DB.STAGING.CLINICAL_STAGE
    STORAGE_INTEGRATION = S3_HOSPITAL_INTEGRATION
    URL = 's3://matteo-r-profai-ex-bucket/stage_sf/clinical_data/'
    FILE_FORMAT = SNOWFLAKE_LEARNING_DB.STAGING.PATIENT_HEALTH_DATA_JSON
;

--CREAZIONE TABELLA PER DATI DA SENSORI IOT --pipe ok
CREATE OR REPLACE TABLE SNOWFLAKE_LEARNING_DB.STAGING.PATIENTS_IOT_VITALS (
    PATIENT_CODE STRING NOT NULL,
    TIMESTAMP TIMESTAMP_TZ NOT NULL,
    DEVICE_ID STRING NOT NULL,
    BED_LOCATION STRING,
    HEART_RATE_BPM NUMBER(3,0),
    SPO2_PERCENT NUMBER(3,0),
    TEMPERATURE_CELSIUS NUMBER(4,1),
    BLOOD_PRESSURE_SYS NUMBER(3,0),
    BLOOD_PRESSURE_DIA NUMBER(3,0),
    BATTERY_LEVEL NUMBER(3,0),
    SIGNAL_QUALITY STRING,
    SENSORS_RAW VARIANT
)
;

--CREAZIONE TABELLA PER DATI GESTIONALI SUI PAZIENTI
CREATE OR REPLACE TABLE SNOWFLAKE_LEARNING_DB.STAGING.PATIENTS_GENERAL_DATA (
    ID_PAZIENTE STRING NOT NULL,
    NOME STRING NOT NULL,
    COGNOME STRING NOT NULL,
    DATA_NASCITA DATE NOT NULL,
    SESSO STRING,
    CF STRING NOT NULL,
    DATA_ACCESSO DATE,
    TIPO_ACCESSO STRING,
    DIAGNOSI_PRINCIPALE STRING,
    DIAGNOSI_SECONDARIA STRING,
    REPARTO STRING,
    DATA_DIMISSIONE DATE,
    DATA_DEGENZA_GIORNI NUMBER(3,0),
    COSTO_TOTALE NUMBER(10,2),
    REGIME_RICOVERO STRING,
    ESITI STRING,
    NOTE STRING
)
;

--CREAZIONE DELLA TABELLA PER RACCOGLIERE CARTELLE CLINICHE ELETTRONICHE (EHR) --PIP OK
CREATE OR REPLACE TABLE SNOWFLAKE_LEARNING_DB.STAGING.EHR_LANDING (
    RAW_JSON VARIANT,
    UPDATE_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
)
;


-- CREAZIONE DELLA TABELLA PER LA RACCOLTA DEI DATI SULLE FATTURE --pipe ok
CREATE OR REPLACE TABLE SNOWFLAKE_LEARNING_DB.STAGING.FATTURE_REPARTI (
    INVOICE_ID STRING NOT NULL,
    DATA_FATTURA DATE NOT NULL,
    REPARTO STRING NOT NULL,
    TIPO_FATTURA STRING NOT NULL,
    PAZIENTE_ID STRING NULL,
    NOME_PAZIENTE STRING NULL,
    DESCRIZIONE_PRESTAZIONE STRING NULL,
    FORNITORE STRING NULL,
    DESCRIZIONE_FORNITURA STRING NULL,
    IMPORTO NUMBER(10,2) NOT NULL,
    STATO STRING NOT NULL
)
;